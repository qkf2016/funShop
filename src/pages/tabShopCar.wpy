<style lang="scss">
@import '../zanui/btn';
@import '../zanui/common';
@import '../zanui/icon';
.writeAddress{
  width: 750rpx;
  height: 150rpx;
}
.go-shop{
  margin-left: 50%;
  transform: translate(-50%, 0);
  margin-top: 100rpx;
}
.product-wrap{
  position: fixed;
  top: 0;
  bottom: 110rpx;
  left: 0;
  right: 0;
  box-sizing: border-box;
  padding: 30rpx;
  background: $white;
  .product{
    width: 690rpx;
    height: 220rpx;
    align-items: center;
    border-bottom: 1px solid $border-color;
    .icon{
      color: $gray-darker;
    }
    .image{
      border: 1px solid $border-color;
      width: 170rpx;
      height: 170rpx;
      margin-left: 20rpx;
    }
    .content-wrap{
      flex-direction: column;
      justify-content: center;
      width: 460rpx;
      height: 200rpx;
      box-sizing: border-box;
      padding-left: 20rpx;
      .name, .spec{
        font-size: 34rpx;
        color: $text-color;
        width: 440rpx;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
        line-height: 60rpx;
      }
      .spec{
        font-size: 28rpx;
        color: $gray-dark;
      }
      .price-num{
        font-size: 32rpx;
        font-weight: 500;
        justify-content: space-between;
        width: 440rpx;
        line-height: 60rpx;
      }
    }
  }
}
.foot-wrap{
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  height: 100rpx;
  background: $white;
  align-items: center;
  .check{
    justify-content: center;
    font-size: 30rpx;
    .icon{
      color: $gray-darker;
      position: relative;
      left: -10rpx;
    }
    .icon-checked{
      position: relative;
      left: -10rpx;
      color: $theme;
    }
  }
  .sum{
    font-size: 32rpx;
    color: $theme;
  }
  .pay{
    height: 100rpx;
    line-height: 100rpx;
    text-align: center;
    background: $theme;
    color: $white;
  }
}
</style>

<template lang='pug'>
  // image.writeAddress(wx:if="{{!addressArr.length}}" src="/pages/images/writeAddress.jpeg" @tap="onTapAddAddress")
  block(wx:if="{{!shopCar.lenght}}")
    srcoll-view.product-wrap(scroll-y)
      view.product.flex
        view.zan-icon.zan-icon-checked.icon
        image.image(src="http://pakbe7by0.bkt.clouddn.com/funshop/images/main-goods2.jpeg")
        view.content-wrap.flex
          view.name 美国吵哦哎撒的
          view.spec 美国吵哦哎撒的
          view.price-num.flex 
            view.price ¥ 490
            view + -
    view.foot-wrap.flex
      view.check.flex.flex-p-1(@tap="toggleChecked")
        view.zan-icon.zan-icon-checked(class="{{checkAll ? 'icon-checked' : 'icon'}}")
        view 全选
      view.sum.flex-p-2 合计: ¥ 0
      view.pay.flex-p-1 结算
  block(wx:else)
    view.__blank-section
      image.image(src="/pages/images/none.svg")
      view.text 空空如也  
    button.zan-btn.zan-btn--small.zan-btn--danger.go-shop(@tap='onTapShopping') 去挑货
</template>

<script>
  import wepy from 'wepy'
  import testMixin from '../mixins/test'
  import { connect } from 'wepy-redux'
  import { addAddress } from '@/store/actions'

  @connect({
    addressArr (state) {
      return state.user.addressArr
    },
    shopCar (state) {
      return state.shopping.shopCar
    }
  }, {
    addAddress
  })

  export default class ShopCar extends wepy.page {
    config = {
      navigationBarTitleText: '趣玩儿店',
      disableScroll: true
    }
    components = {

    }

    mixins = [testMixin]

    data = {
      checkAll: false
    }

    computed = {

    }

    methods = {
      async onTapAddAddress() {
        const {userName, telNumber, cityName, countyName, detailInfo, postalCode} = await wepy.chooseAddress()
        let addressInfo = {
          userName,
          telNumber,
          address: cityName + countyName + detailInfo,
          postalCode: postalCode || ''
        }
        await this.methods.addAddress(addressInfo)
        this.$apply()
      },
      onTapShopping() {
        wepy.switchTab({url: '/pages/tabClassification'})
      },
      toggleChecked() {
        this.checkAll = !this.checkAll
      }
    }

    events = {

    }

    onLoad() {

    }
  }
</script>
